module Anthropic
  module Models
    module Messages
      type batch_create_params =
        {
          requests: Array[Anthropic::Models::Messages::BatchCreateParams::Request]
        }
        & Anthropic::request_parameters

      class BatchCreateParams < Anthropic::BaseModel
        extend Anthropic::RequestParameters::Converter
        include Anthropic::RequestParameters

        attr_accessor requests: Array[Anthropic::Models::Messages::BatchCreateParams::Request]

        def initialize:
          (
            requests: Array[Anthropic::Models::Messages::BatchCreateParams::Request],
            request_options: Anthropic::request_opts
          ) -> void
          | (
            ?Anthropic::Models::Messages::batch_create_params
            | Anthropic::BaseModel data
          ) -> void

        def to_h: -> Anthropic::Models::Messages::batch_create_params

        type request =
          {
            custom_id: String,
            params: Anthropic::Models::Messages::BatchCreateParams::Request::Params
          }

        class Request < Anthropic::BaseModel
          attr_accessor custom_id: String

          attr_accessor params: Anthropic::Models::Messages::BatchCreateParams::Request::Params

          def initialize:
            (
              custom_id: String,
              params: Anthropic::Models::Messages::BatchCreateParams::Request::Params
            ) -> void
            | (
              ?Anthropic::Models::Messages::BatchCreateParams::request
              | Anthropic::BaseModel data
            ) -> void

          def to_h: -> Anthropic::Models::Messages::BatchCreateParams::request

          type params =
            {
              max_tokens: Integer,
              messages: Array[Anthropic::Models::MessageParam],
              model: Anthropic::Models::model,
              metadata: Anthropic::Models::Metadata,
              stop_sequences: Array[String],
              stream: bool,
              system_: Anthropic::Models::Messages::BatchCreateParams::Request::Params::system_,
              temperature: Float,
              tool_choice: Anthropic::Models::tool_choice,
              tools: Array[Anthropic::Models::Tool],
              top_k: Integer,
              top_p: Float
            }

          class Params < Anthropic::BaseModel
            attr_accessor max_tokens: Integer

            attr_accessor messages: Array[Anthropic::Models::MessageParam]

            attr_accessor model: Anthropic::Models::model

            attr_reader metadata: Anthropic::Models::Metadata?

            def metadata=: (Anthropic::Models::Metadata) -> void

            attr_reader stop_sequences: Array[String]

            def stop_sequences=: (Array[String]) -> void

            attr_reader stream: bool?

            def stream=: (bool) -> void

            attr_reader system_: Anthropic::Models::Messages::BatchCreateParams::Request::Params::system_?

            def system_=: (
              Anthropic::Models::Messages::BatchCreateParams::Request::Params::system_
            ) -> void

            attr_reader temperature: Float?

            def temperature=: (Float) -> void

            attr_reader tool_choice: Anthropic::Models::tool_choice?

            def tool_choice=: (Anthropic::Models::tool_choice) -> void

            attr_reader tools: Array[Anthropic::Models::Tool]

            def tools=: (Array[Anthropic::Models::Tool]) -> void

            attr_reader top_k: Integer?

            def top_k=: (Integer) -> void

            attr_reader top_p: Float?

            def top_p=: (Float) -> void

            def initialize:
              (
                max_tokens: Integer,
                messages: Array[Anthropic::Models::MessageParam],
                model: Anthropic::Models::model,
                metadata: Anthropic::Models::Metadata,
                stop_sequences: Array[String],
                stream: bool,
                system_: Anthropic::Models::Messages::BatchCreateParams::Request::Params::system_,
                temperature: Float,
                tool_choice: Anthropic::Models::tool_choice,
                tools: Array[Anthropic::Models::Tool],
                top_k: Integer,
                top_p: Float
              ) -> void
              | (
                ?Anthropic::Models::Messages::BatchCreateParams::Request::params
                | Anthropic::BaseModel data
              ) -> void

            def to_h: -> Anthropic::Models::Messages::BatchCreateParams::Request::params

            type system_ = String | Array[Anthropic::Models::TextBlockParam]

            class System < Anthropic::Union
              type text_block_param_array =
                Array[Anthropic::Models::TextBlockParam]

              TextBlockParamArray: text_block_param_array

              private def self.variants: -> [[nil, String], [nil, Array[Anthropic::Models::TextBlockParam]]]
            end
          end
        end
      end
    end
  end
end
