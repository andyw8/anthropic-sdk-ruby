module Anthropic
  module Models
    type image_block_param =
      {
        source: Anthropic::Models::ImageBlockParam::Source,
        type: :image,
        cache_control: Anthropic::Models::CacheControlEphemeral?
      }

    class ImageBlockParam < Anthropic::BaseModel
      attr_accessor source: Anthropic::Models::ImageBlockParam::Source

      attr_accessor type: :image

      attr_accessor cache_control: Anthropic::Models::CacheControlEphemeral?

      def initialize:
        (
          source: Anthropic::Models::ImageBlockParam::Source,
          cache_control: Anthropic::Models::CacheControlEphemeral?,
          type: :image
        ) -> void
        | (
          ?Anthropic::Models::image_block_param | Anthropic::BaseModel data
        ) -> void

      def to_hash: -> Anthropic::Models::image_block_param

      type source =
        {
          data: String,
          media_type: Anthropic::Models::ImageBlockParam::Source::media_type,
          type: :base64
        }

      class Source < Anthropic::BaseModel
        attr_accessor data: String

        attr_accessor media_type: Anthropic::Models::ImageBlockParam::Source::media_type

        attr_accessor type: :base64

        def initialize:
          (
            data: String,
            media_type: Anthropic::Models::ImageBlockParam::Source::media_type,
            type: :base64
          ) -> void
          | (
            ?Anthropic::Models::ImageBlockParam::source
            | Anthropic::BaseModel data
          ) -> void

        def to_hash: -> Anthropic::Models::ImageBlockParam::source

        type media_type =
          :"image/jpeg" | :"image/png" | :"image/gif" | :"image/webp"

        class MediaType < Anthropic::Enum
          IMAGE_JPEG: :"image/jpeg"
          IMAGE_PNG: :"image/png"
          IMAGE_GIF: :"image/gif"
          IMAGE_WEBP: :"image/webp"

          def self.values: -> ::Array[Anthropic::Models::ImageBlockParam::Source::media_type]
        end
      end
    end
  end
end
