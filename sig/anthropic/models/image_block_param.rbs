module Anthropic
  module Models
    type image_block_param =
      {
        source: Anthropic::Models::ImageBlockParam::source,
        type: :image,
        cache_control: Anthropic::Models::CacheControlEphemeral?
      }

    class ImageBlockParam < Anthropic::BaseModel
      attr_accessor source: Anthropic::Models::ImageBlockParam::source

      attr_accessor type: :image

      attr_accessor cache_control: Anthropic::Models::CacheControlEphemeral?

      def initialize:
        (
          source: Anthropic::Models::ImageBlockParam::source,
          cache_control: Anthropic::Models::CacheControlEphemeral?,
          type: :image
        ) -> void
        | (
          ?Anthropic::Models::image_block_param | Anthropic::BaseModel data
        ) -> void

      def to_hash: -> Anthropic::Models::image_block_param

      type source =
        Anthropic::Models::Base64ImageSource | Anthropic::Models::URLImageSource

      class Source < Anthropic::Union
        private def self.variants: -> [[:base64, Anthropic::Models::Base64ImageSource], [:url, Anthropic::Models::URLImageSource]]
      end
    end
  end
end
