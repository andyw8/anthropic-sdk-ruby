module Anthropic
  module Models
    type completion_create_params =
      {
        max_tokens_to_sample: Integer,
        model: Anthropic::Models::model,
        prompt: String,
        metadata: Anthropic::Models::Metadata,
        stop_sequences: Array[String],
        stream: Anthropic::Models::CompletionCreateParams::stream,
        temperature: Float,
        top_k: Integer,
        top_p: Float
      }
      & Anthropic::request_parameters

    class CompletionCreateParams < Anthropic::BaseModel
      extend Anthropic::RequestParameters::Converter
      include Anthropic::RequestParameters

      attr_accessor max_tokens_to_sample: Integer

      attr_accessor model: Anthropic::Models::model

      attr_accessor prompt: String

      attr_reader metadata: Anthropic::Models::Metadata?

      def metadata=: (Anthropic::Models::Metadata) -> void

      attr_reader stop_sequences: Array[String]

      def stop_sequences=: (Array[String]) -> void

      attr_accessor stream: Anthropic::Models::CompletionCreateParams::stream

      attr_reader temperature: Float?

      def temperature=: (Float) -> void

      attr_reader top_k: Integer?

      def top_k=: (Integer) -> void

      attr_reader top_p: Float?

      def top_p=: (Float) -> void

      def initialize:
        (
          max_tokens_to_sample: Integer,
          model: Anthropic::Models::model,
          prompt: String,
          stream: Anthropic::Models::CompletionCreateParams::stream,
          metadata: Anthropic::Models::Metadata,
          stop_sequences: Array[String],
          temperature: Float,
          top_k: Integer,
          top_p: Float,
          request_options: Anthropic::request_opts
        ) -> void
        | (
          ?Anthropic::Models::completion_create_params
          | Anthropic::BaseModel data
        ) -> void

      def to_h: -> Anthropic::Models::completion_create_params

      type stream = true

      class Stream < Anthropic::Enum
        TRUE: true

        def self.values: -> Array[Anthropic::Models::CompletionCreateParams::stream]
      end
    end
  end
end
